name: CI/CD to AKS

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  REGISTRY: kolyaacr.azurecr.io
  IMAGE_NAME: azure-web-app
  NAMESPACE: azure-web
  DEPLOYMENT_NAME: azure-web-app   # ← обнови на фактическое имя Deployment при необходимости
  CONTAINER_NAME: azure-web-app    # ← обнови на фактическое имя контейнера при необходимости

jobs:
  build-test-push-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Show GitHub context
      run: |
        echo "event: ${{ github.event_name }}"
        echo "ref:   ${{ github.ref }}"
        echo "sha:   ${{ github.sha }}"
        echo "repo:  ${{ github.repository }}"

    - name: Checkout
      uses: actions/checkout@v3

    - name: Basic tests
      run: |
        test -f index.html
        grep -qi "<html" index.html

    - name: Docker login to ACR
      run: echo "$ACR_PASSWORD" | docker login ${REGISTRY} -u "$ACR_USERNAME" --password-stdin
      env:
        ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
        ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}

    - name: Build image
      run: |
        docker build -t ${REGISTRY}/${IMAGE_NAME}:latest -t ${REGISTRY}/${IMAGE_NAME}:${{ github.sha }} .

    - name: Push image
      run: |
        docker push ${REGISTRY}/${IMAGE_NAME}:latest
        docker push ${REGISTRY}/${IMAGE_NAME}:${{ github.sha }}

    - name: Configure kubectl context from secret
      run: |
        mkdir -p $HOME/.kube
        echo "$KUBE_CONFIG" > $HOME/.kube/config
        chmod 600 $HOME/.kube/config
      env:
        KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}

    - name: Ensure namespace exists
      run: |
        kubectl get ns ${NAMESPACE} || kubectl create ns ${NAMESPACE}

    - name: Apply manifests with current image tag (namespaced)
      run: |
        set -e
        sed -i "s|image: .*|image: ${REGISTRY}/${IMAGE_NAME}:${{ github.sha }}|" deployment.yaml
        kubectl -n ${NAMESPACE} apply -f deployment.yaml

    - name: Rollout update (by explicit names)
      run: |
        set -e
        kubectl -n ${NAMESPACE} set image deployment/${DEPLOYMENT_NAME} ${CONTAINER_NAME}=${REGISTRY}/${IMAGE_NAME}:${{ github.sha }} || true
        kubectl -n ${NAMESPACE} rollout status deployment/${DEPLOYMENT_NAME} --timeout=180s || true 
